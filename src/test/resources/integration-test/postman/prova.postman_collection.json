{
	"info": {
		"_postman_id": "96ccc411-ce65-475d-a37f-e799b037e742",
		"name": "prova",
		"description": "# ‚õìÔ∏è Get started here\n\nPostman allows you to test your APIs using simple Javascript code. You can evaluate your response body, headers, cookies, and more using the [ChaiJS BDD](https://www.chaijs.com/api/bdd/) syntax.\n\nThis template guides you through the process of setting up an integration test to ensure that all individual components of an API function together seamlessly.\n\nThe API under test in this collection includes three endpoints for registering and receiving a token, accessing your unique generated name, and unregistering a token:\n\n- POST `/register`\n- POST `/unregister`\n- GET `/my-name`\n    \n\nBy setting up requests in the order of the operation, we can test the flow of data to and from the endpoints and ensure they work together as expected. We also verify that the data persists between requests on the back end.\n\n## üîñ **How to use this template**\n\n**Step 1:** Check out the requests' documentation to learn more about -\n\n- what each request is meant to do.\n- the tests we've added against each one.\n    \n\n**Step 2:** Run this collection by clicking on \"Run\".\n\n<img src=\"https://content.pstmn.io/84019b0f-69c8-4c5f-98b9-2c90a6f9a0b1/Y29sbGVjdGlvbi1ydW5uZXItYnV0dG9uLmpwZWc=\" alt=\"\" height=\"103\" width=\"266\">\n\n**Step 3:** To customize this template, replace the request URLs with your API endpoints and add or edit the tests if needed.\n\n## ‚ÑπÔ∏è Resources\n\n[Scripting in Postman](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/)\n\n[Test script examples](https://learning.postman.com/docs/writing-scripts/script-references/test-examples/)\n\n[Postman Sandbox API reference](https://learning.postman.com/docs/sending-requests/grpc/postman-sandbox-api/#writing-assertions)\n\n[Using the Collection Runner](https://learning.postman.com/docs/collections/running-collections/intro-to-collection-runs/)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8145532"
	},
	"item": [
		{
			"name": "BPMN",
			"item": [
				{
					"name": "Lista BPMN filtrati",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.test(\"Items found = 1\", function () {\r",
									"    pm.expect(1, jsonData.itemsFound);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/console-service/bpmn/filter?pageSize=10&pageIndex=0&functionType=TEST",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"console-service",
								"bpmn",
								"filter"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "10"
								},
								{
									"key": "pageIndex",
									"value": "0"
								},
								{
									"key": "functionType",
									"value": "TEST"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Lista BPMN filtrati non trovati",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.test(\"Items found = 0\", function () {\r",
									"    var items = jsonData.itemsFound;\r",
									"    pm.expect(0, jsonData.itemsFound);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"functionType\", \"TEST\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/console-service/bpmn/filter?pageSize=10&pageIndex=0&functionType=TEST",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"console-service",
								"bpmn",
								"filter"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "10"
								},
								{
									"key": "pageIndex",
									"value": "0"
								},
								{
									"key": "functionType",
									"value": "TEST"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Creazione BPMN OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.collectionVariables.set(\"bpmn_file_created\", responseBody);\r",
									"    pm.collectionVariables.set(\"bpmn_id\", jsonData.bpmnId);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"value": "{{bpmn_file_input}}",
									"type": "text"
								},
								{
									"key": "filename",
									"value": "TestFile",
									"type": "text"
								},
								{
									"key": "functionType",
									"value": "MENU",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/console-service/bpmn",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"console-service",
								"bpmn"
							]
						}
					},
					"response": []
				},
				{
					"name": "Creazione BPMN KO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.test(\"Error code ATMLM_4000012\", function(){\r",
									"    pm.expect(\"ATMLM_4000012\", jsonData.errorCode);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"value": "{{bpmn_file_input}}",
									"type": "text"
								},
								{
									"key": "filename",
									"value": "TestFileFail",
									"type": "text"
								},
								{
									"key": "functionType",
									"value": "MENU",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/console-service/bpmn",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"console-service",
								"bpmn"
							]
						}
					},
					"response": []
				},
				{
					"name": "Creazione Associazione BPMN OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\"{{association_triplet_create}}\"",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/console-service/bpmn/associations/:uuid/version/:version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"console-service",
								"bpmn",
								"associations",
								":uuid",
								"version",
								":version"
							],
							"variable": [
								{
									"key": "uuid",
									"value": "{{bpmn_id}}"
								},
								{
									"key": "version",
									"value": "{{bpmn_version}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Creazione Associazione BPMN KO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.test(\"Error code ATMLM_4000047\", function(){\r",
									"    pm.expect(\"ATMLM_4000047\", jsonData.errorCode);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\"{{association_triplet_create}}\""
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/console-service/bpmn/associations/:uuid/version/:version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"console-service",
								"bpmn",
								"associations",
								":uuid",
								"version",
								":version"
							],
							"variable": [
								{
									"key": "uuid",
									"value": "{{not_found_uuid}}"
								},
								{
									"key": "version",
									"value": "{{bpmn_version}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Modifica Associazione BPMN OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\"{{association_triplet_update}}\"",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/console-service/bpmn/associations/:uuid/version/:version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"console-service",
								"bpmn",
								"associations",
								":uuid",
								"version",
								":version"
							],
							"variable": [
								{
									"key": "uuid",
									"value": "{{bpmn_id}}"
								},
								{
									"key": "version",
									"value": "{{bpmn_version}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Modifica Associazione BPMN KO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.test(\"Error code ATMLM_4000003\", function(){\r",
									"    pm.expect(\"ATMLM_4000003\", jsonData.errorCode);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\"{{association_triplet_update}}\"",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/console-service/bpmn/associations/:uuid/version/:version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"console-service",
								"bpmn",
								"associations",
								":uuid",
								"version",
								":version"
							],
							"variable": [
								{
									"key": "uuid",
									"value": "{{not_found_uuid}}"
								},
								{
									"key": "version",
									"value": "{{bpmn_version}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Lista Associazioni BPMN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.test(\"Items found = 1\", function () {\r",
									"    pm.expect(1, jsonData.itemsFound);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\"{{association_triplet_update}}\"",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/console-service/bpmn/associations/:uuid/version/:version?pageIndex=0&pageSize=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"console-service",
								"bpmn",
								"associations",
								":uuid",
								"version",
								":version"
							],
							"query": [
								{
									"key": "pageIndex",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "10"
								}
							],
							"variable": [
								{
									"key": "uuid",
									"value": "{{bpmn_id}}"
								},
								{
									"key": "version",
									"value": "{{bpmn_version}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Elimina Associazione BPMN OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/console-service/bpmn/associations/:uuid/version/:version?acquirerId={{aquirerId_delete}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"console-service",
								"bpmn",
								"associations",
								":uuid",
								"version",
								":version"
							],
							"query": [
								{
									"key": "acquirerId",
									"value": "{{aquirerId_delete}}"
								}
							],
							"variable": [
								{
									"key": "uuid",
									"value": "{{bpmn_id}}"
								},
								{
									"key": "version",
									"value": "{{bpmn_version}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Elimina Associazione BPMN KO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.test(\"Error code ATMLM_4000048\", function(){\r",
									"    pm.expect(\"ATMLM_4000048\", jsonData.errorCode);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/console-service/bpmn/associations/:uuid/version/:version?acquirerId={{not_found_acquirerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"console-service",
								"bpmn",
								"associations",
								":uuid",
								"version",
								":version"
							],
							"query": [
								{
									"key": "acquirerId",
									"value": "{{not_found_acquirerId}}"
								}
							],
							"variable": [
								{
									"key": "uuid",
									"value": "{{bpmn_id}}"
								},
								{
									"key": "version",
									"value": "{{bpmn_version}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Deploy BPMN OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.collectionVariables.set(\"bpmn_file_deployed\", responseBody);\r",
									"    pm.collectionVariables.set(\"bpmn_id_deployed\", jsonData.bpmnId);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/console-service/bpmn/deploy/:bpmn/version/:version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"console-service",
								"bpmn",
								"deploy",
								":bpmn",
								"version",
								":version"
							],
							"variable": [
								{
									"key": "bpmn",
									"value": "{{bpmn_id}}"
								},
								{
									"key": "version",
									"value": "{{bpmn_version}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Deploy BPMN KO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"})\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.test(\"Error code ATMLM_4000047\", function(){\r",
									"    pm.expect(\"ATMLM_4000047\", jsonData.errorCode);\r",
									"})\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/console-service/bpmn/deploy/:bpmn/version/:version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"console-service",
								"bpmn",
								"deploy",
								":bpmn",
								"version",
								":version"
							],
							"variable": [
								{
									"key": "bpmn",
									"value": "{{not_found_uuid}}"
								},
								{
									"key": "version",
									"value": "{{bpmn_version}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Disabilita BPMN OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/console-service/bpmn/disable/:bpmn/version/:version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"console-service",
								"bpmn",
								"disable",
								":bpmn",
								"version",
								":version"
							],
							"variable": [
								{
									"key": "bpmn",
									"value": "{{bpmn_id}}"
								},
								{
									"key": "version",
									"value": "{{bpmn_version}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Disabilita BPMN KO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"})\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.test(\"Error code ATMLM_4000004\", function(){\r",
									"    pm.expect(\"ATMLM_4000004\", jsonData.errorCode);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/console-service/bpmn/disable/:bpmn/version/:version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"console-service",
								"bpmn",
								"disable",
								":bpmn",
								"version",
								":version"
							],
							"variable": [
								{
									"key": "bpmn",
									"value": "{{not_found_uuid}}"
								},
								{
									"key": "version",
									"value": "{{bpmn_version}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "baseUrl",
			"value": "https://postman-integration-testing.glitch.me/"
		},
		{
			"key": "functionType",
			"value": ""
		},
		{
			"key": "bpmn_file_input",
			"value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn:definitions xmlns:bpmn=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:camunda=\"http://camunda.org/schema/1.0/bpmn\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:modeler=\"http://camunda.org/schema/modeler/1.0\" id=\"Definitions_0jcpj0q\" targetNamespace=\"http://bpmn.io/schema/bpmn\" exporter=\"Camunda Modeler\" exporterVersion=\"5.15.2\" modeler:executionPlatform=\"Camunda Platform\" modeler:executionPlatformVersion=\"7.19.0\">\n  <bpmn:process id=\"demo11_06\" isExecutable=\"true\" camunda:historyTimeToLive=\"180\">\n    <bpmn:startEvent id=\"StartEvent_1\">\n      <bpmn:extensionElements>\n        <camunda:executionListener delegateExpression=\"${populateBusinessKey}\" event=\"start\" />\n      </bpmn:extensionElements>\n      <bpmn:outgoing>Flow_0m1t6c8</bpmn:outgoing>\n    </bpmn:startEvent>\n    <bpmn:sequenceFlow id=\"Flow_0m1t6c8\" sourceRef=\"StartEvent_1\" targetRef=\"rest_call\" />\n    <bpmn:serviceTask id=\"rest_call\" name=\"firstTask\">\n      <bpmn:extensionElements>\n        <camunda:connector>\n          <camunda:inputOutput>\n            <camunda:inputParameter name=\"method\">GET</camunda:inputParameter>\n            <camunda:inputParameter name=\"url\">https://reqres.in/api/users?page=2</camunda:inputParameter>\n            <camunda:inputParameter name=\"headers\">\n              <camunda:map>\n                <camunda:entry key=\"Content-Type\">application/json</camunda:entry>\n              </camunda:map>\n            </camunda:inputParameter>\n            <camunda:outputParameter name=\"res\">${S(response).prop(\"data\")}</camunda:outputParameter>\n          </camunda:inputOutput>\n          <camunda:connectorId>http-connector</camunda:connectorId>\n        </camunda:connector>\n      </bpmn:extensionElements>\n      <bpmn:incoming>Flow_0m1t6c8</bpmn:incoming>\n      <bpmn:outgoing>Flow_06v2pm6</bpmn:outgoing>\n    </bpmn:serviceTask>\n    <bpmn:sequenceFlow id=\"Flow_06v2pm6\" sourceRef=\"rest_call\" targetRef=\"Activity_1ni0zi6\" />\n    <bpmn:userTask id=\"Activity_1ni0zi6\">\n      <bpmn:incoming>Flow_06v2pm6</bpmn:incoming>\n    </bpmn:userTask>\n  </bpmn:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1qxsvpd\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds x=\"179\" y=\"99\" width=\"36\" height=\"36\" />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"Activity_1gek9ke_di\" bpmnElement=\"rest_call\">\n        <dc:Bounds x=\"310\" y=\"77\" width=\"100\" height=\"80\" />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"Activity_158am8k_di\" bpmnElement=\"Activity_1ni0zi6\">\n        <dc:Bounds x=\"710\" y=\"77\" width=\"100\" height=\"80\" />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNEdge id=\"Flow_0m1t6c8_di\" bpmnElement=\"Flow_0m1t6c8\">\n        <di:waypoint x=\"215\" y=\"117\" />\n        <di:waypoint x=\"310\" y=\"117\" />\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNEdge id=\"Flow_06v2pm6_di\" bpmnElement=\"Flow_06v2pm6\">\n        <di:waypoint x=\"410\" y=\"117\" />\n        <di:waypoint x=\"710\" y=\"117\" />\n      </bpmndi:BPMNEdge>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn:definitions>\n",
			"type": "string"
		},
		{
			"key": "bpmn_file_created",
			"value": "",
			"type": "string"
		},
		{
			"key": "bpmn_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "association_triplet_create",
			"value": "",
			"type": "string"
		},
		{
			"key": "association_triplet_update",
			"value": "",
			"type": "string"
		},
		{
			"key": "bpmn_version",
			"value": "",
			"type": "string"
		},
		{
			"key": "aquirerId_delete",
			"value": "",
			"type": "string"
		},
		{
			"key": "bpmn_file_deployed",
			"value": ""
		},
		{
			"key": "bpmn_id_deployed",
			"value": ""
		},
		{
			"key": "not_found_uuid",
			"value": ""
		},
		{
			"key": "not_found_acquirerId",
			"value": ""
		}
	]
}